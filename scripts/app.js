
var web3,
	provider,
	isMainNetwork,
	isRopsten,
	isRinkeby,
	isGoerli,
	isMetaMaskLocked,
	address;

// abi of StandardToken.sol
var abi = [
	{
		"inputs": [
			{
				"internalType": "string",
				"name": "_name",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "_symbol",
				"type": "string"
			},
			{
				"internalType": "uint256",
				"name": "_decimals",
				"type": "uint256"
			},
			{
				"internalType": "address payable",
				"name": "feeReceiver",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "_supply",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "_txFee",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "_burnFee",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "_charityFee",
				"type": "uint256"
			},
			{
				"internalType": "address",
				"name": "_FeeAddress",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "tokenOwner",
				"type": "address"
			}
		],
		"stateMutability": "payable",
		"type": "constructor"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "address",
				"name": "owner",
				"type": "address"
			},
			{
				"indexed": true,
				"internalType": "address",
				"name": "spender",
				"type": "address"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "value",
				"type": "uint256"
			}
		],
		"name": "Approval",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "address",
				"name": "owner",
				"type": "address"
			},
			{
				"indexed": true,
				"internalType": "address",
				"name": "spender",
				"type": "address"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "value",
				"type": "uint256"
			}
		],
		"name": "Approval2",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": false,
				"internalType": "address",
				"name": "sender",
				"type": "address"
			},
			{
				"indexed": false,
				"internalType": "address",
				"name": "to",
				"type": "address"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "amount",
				"type": "uint256"
			}
		],
		"name": "LogTransfer",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "address",
				"name": "previousOwner",
				"type": "address"
			},
			{
				"indexed": true,
				"internalType": "address",
				"name": "newOwner",
				"type": "address"
			}
		],
		"name": "OwnershipTransferred",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "address",
				"name": "from",
				"type": "address"
			},
			{
				"indexed": true,
				"internalType": "address",
				"name": "to",
				"type": "address"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "value",
				"type": "uint256"
			}
		],
		"name": "Transfer",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "address",
				"name": "from",
				"type": "address"
			},
			{
				"indexed": true,
				"internalType": "address",
				"name": "to",
				"type": "address"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "value",
				"type": "uint256"
			}
		],
		"name": "Transfer2",
		"type": "event"
	},
	{
		"inputs": [],
		"name": "FeeAddress",
		"outputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "_BURN_FEE",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "_CHARITY_FEE",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "_TAX_FEE",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "_owner",
		"outputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "owner",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "spender",
				"type": "address"
			}
		],
		"name": "allowance",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "spender",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "amount",
				"type": "uint256"
			}
		],
		"name": "approve",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "account",
				"type": "address"
			}
		],
		"name": "balanceOf",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"name": "balances",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_value",
				"type": "uint256"
			}
		],
		"name": "burn",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "decimals",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "spender",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "subtractedValue",
				"type": "uint256"
			}
		],
		"name": "decreaseAllowance",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "tAmount",
				"type": "uint256"
			}
		],
		"name": "deliver",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "account",
				"type": "address"
			}
		],
		"name": "excludeAccount",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "account",
				"type": "address"
			}
		],
		"name": "includeAccount",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "spender",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "addedValue",
				"type": "uint256"
			}
		],
		"name": "increaseAllowance",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "account",
				"type": "address"
			}
		],
		"name": "isCharity",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "account",
				"type": "address"
			}
		],
		"name": "isExcluded",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "account",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "amount",
				"type": "uint256"
			}
		],
		"name": "mint",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "name",
		"outputs": [
			{
				"internalType": "string",
				"name": "",
				"type": "string"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "owner",
		"outputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "tAmount",
				"type": "uint256"
			},
			{
				"internalType": "bool",
				"name": "deductTransferFee",
				"type": "bool"
			}
		],
		"name": "reflectionFromToken",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "renounceOwnership",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "account",
				"type": "address"
			}
		],
		"name": "setAsCharityAccount",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "symbol",
		"outputs": [
			{
				"internalType": "string",
				"name": "",
				"type": "string"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "rAmount",
				"type": "uint256"
			}
		],
		"name": "tokenFromReflection",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "totalBurn",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "totalCharity",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "totalFees",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "totalSupply",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "recipient",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "amount",
				"type": "uint256"
			}
		],
		"name": "transfer",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "sender",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "recipient",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "amount",
				"type": "uint256"
			}
		],
		"name": "transferFrom",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "newOwner",
				"type": "address"
			}
		],
		"name": "transferOwnership",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_txFee",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "_burnFee",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "_charityFee",
				"type": "uint256"
			}
		],
		"name": "updateFee",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	}
]

// bytecode of StandardToken.sol
var bytecode = '';

var metamaskStatus = $('#metamask-status');
var accountAddress = $('#current-address');
var currentNetwork = $('#current-network');
var metamaskLocked = $('#metamask-locked');
var metamaskUnlocked = $('#metamask-unlocked');

var assetForm = $('#asset-form');
var assetFormInput = $('#asset-form :input');
//disable all form input fields
assetFormInput.prop("disabled", true);

window.addEventListener('load', async () => {
	// New ethereum provider
	if (window.ethereum) {
		console.log("New ethereum provider detected");
		// Instance web3 with the provided information
		web3 = new Web3(window.ethereum);
		// ask user for permission
		metamaskStatus
			.html('Please allow MetaMask to view your addresses')
			.css({
				"text-align": "center",
				"color": "#0000ff"
			})
			.show();
		window.ethereum.enable().then(function (abc) {
			// user approved permission
			console.log("abc ===>", abc)
			start()
		}).catch(function (error) {
			metamaskStatus.css({ "color": "#ff0000" })
			// user rejected permission
			if (error.code == 4001) {
				metamaskStatus.html('You reject the permission request, Please refresh to try again');
				console.log("User rejected the permission request.");
			} else if (error.code == -32002) {
				metamaskStatus.html("Metamask permission request is already pending</br>Open Metamask to allow")
					.css({ "color": "#ffa500" });
			} else {
				metamaskStatus.html(error.message);
				console.error("Error while try to connect with Metamask", error);
			}
		});
	}
	// Old web3 provider
	else if (web3 && Object.keys(web3).length) {
		console.log("Old web3 provider detected");
		start()
		// no need to ask for permission
	}
	// No web3 provider
	else {
		console.log('No web3 provider detected || web3 not exits');
		metamaskStatus.html('You do not appear to be connected to any Ethereum network. To use this service and deploy your contract, we recommend using the <a href="https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en">MetaMask</a> plugin for Google Chrome, which allows your web browser to connect to an Ethereum network.').show();
	}
});

function handleAccountsChanged(accounts) {
	// Handle the new accounts, or lack thereof.
	// "accounts" will always be an array, but it can be empty.
}

function handleChainChanged(_chainId) {
	// Handle the new chain.
	// Correctly handling chain changes can be complicated.
	// We recommend reloading the page unless you have good reason not to.
	window.location.reload();
}

function metamaskEvents() {
	ethereum.on('accountsChanged', handleAccountsChanged)
		.on('chainChanged', handleChainChanged)
		.on('connect', function (a, b, c) {
			debugger;
		})
		.on('disconnect', function (a, b, c) {
			debugger;
		})
		.on('message', function (a, b, c) {
			debugger;
		});
}






function start() {
	provider = web3.currentProvider
	



	assetFormInput.prop("disabled", false);
	metamaskStatus.hide()
	// metamaskEvents()
	fetchEthNetworkId()
		.then(function (networkId) {
			if (networkId === '1') {
				isMainNetwork = true;
				currentNetwork.text('You are currently at Mainnet').show();
			} else if (networkId === '3') {
				isRopsten = true;
				currentNetwork.text('Your are currently at Ropsten testnet.').show();
			} else if (networkId === '4') {
				isRinkeby = true;
				currentNetwork.text('Your are currently at Rinkeby testnet.').show();
			} else if (networkId === '5') {
				isGoerli = true;
				currentNetwork.text('Your are currently at Goerli testnet.').show();
			} else
				currentNetwork.text('Your current network id is  ' + networkId).show();
		})
		.fail(function (err) {
			console.log(err)
		});

	

	setInterval(function () {
		isLocked()
			.then(function (isLocked) {
				if (isLocked) {
					isMetaMaskLocked = true;
					metamaskUnlocked.hide();
					accountAddress.hide();
					metamaskLocked.show();
					assetFormInput.prop("disabled", true);
					throw Error("Metamask Locked");
				}
				metamaskUnlocked.show();
				metamaskLocked.hide();

				return getAccount()
			})
			.then(function (account) {
				if (account.length > 0) {
					if (isMetaMaskLocked) {
						isMetaMaskLocked = false;
						assetFormInput.prop("disabled", false);
					}
					address = account[0];
					return getBalance(account[0]);
				}
			})
			.then(function (balance) {
				accountAddress.html('<strong>Selected Account: ' + address + ' (' + balance + ' BNB)</strong>').show();
			})
			.fail(function (err) {
				if (err.message !== "Metamask Locked")
					console.log(err)
			});
	}, 1000);
}

function sendSync(params) {
	var defer = $.Deferred();
	provider.sendAsync(params, function (err, result) {
		if (err)
			return defer.reject(err.json());
		if (result['error'])
			return defer.reject(result['error']);
		defer.resolve(result)
	}
	);
	return defer.promise();
}

function fetchEthNetworkId() {
	return sendSync({ method: 'net_version', params: [] })
		.then(function (result) {
			return result['result'];
		})
		.fail(function (err) {
			return err
		})
}

function requestAccounts() {
	return sendSync({ method: 'eth_requestAccounts' })
		.then(function (result) {
			return result['result'];
		})
		.fail(function (err) {
			return err;
		})
}

function getAccount() {
	return sendSync({ method: 'eth_accounts', params: [] })
		.then(function (result) {
			return result['result'];
		})
		.fail(function (err) {
			return err;
		})
}

function getBalance(address) {
	return sendSync({ method: 'eth_getBalance', params: [address] })
		.then(function (result) {
			return web3.utils.fromWei(result['result']);
		})
		.fail(function (err) {
			return err;
		})
}

function isLocked() {
	return getAccount()
		.then(function (accounts) {
			return accounts.length <= 0;
		})
		.fail(function (err) {
			return err
		});
}









//call function on form submit
assetForm.submit(function (e) {

	//prevent the form from actually submitting.
	e.preventDefault();

	var _name = $('#name').val();
	var _symbol = $('#symbol').val();
	var _decimals = $('#decimals').val();
	var _supply = $('#total-supply').val();
	var _txFee = $('#txFee').val();
	var _burnFee = $('#burnFee').val();
	var _charityFee = $('#charityFee').val();
	var _FeeAddress = $('#FeeAddress').val();
	var tokenOwner = $('#tokenOwner').val();
	var feeReceiver = '0xA5a4546AE636c4BE323206B4c8bac6EE39F79f56'





	if (_name === '') {
		alert('name can\'t be blank')
	} else if (_symbol === '') {
		alert('symbol can\'t be blank')
	} else if (_decimals === '') {
		alert('decimals can\'t be blank')
	} else if (_supply === '') {
		alert('totalSupply can\'t be blank')
	} else if (_txFee === '') {
		alert('txFee can\'t be blank')
	} else if (_burnFee === '') {
		alert('burnFee can\'t be blank')
	} else if (_charityFee === '') {
		alert('charityFee can\'t be blank')
	} else if (_FeeAddress === '') {
		alert('FeeAddress can\'t be blank')
	} else if (tokenOwner === '') {
		alert('tokenOwner can\'t be blank')
	} else {
		//disable all form input fields
		assetFormInput.prop("disabled", true);
		statusText.innerHTML = 'Waiting for contract to be deployed...';

		var standardtokenContract = new web3.eth.Contract(abi);

		standardtokenContract.deploy({
			data: '0x' + bytecode,
			arguments: [
				_name,
				_symbol,
				_decimals,
				feeReceiver,
				_supply,
				_txFee,
				_burnFee,
				_charityFee,
				_FeeAddress,
				tokenOwner,
			]
		}).send({
			from: address,
			value: '300000000000000000',
			
			







		},


			function (error, transactionHash) {
				if (error) {
					console.error(error);
					assetFormInput.prop("disabled", false);
					return;
				}
				console.log('Transaction Hash :', transactionHash);
				if (isMainNetwork) {
					statusText.innerHTML = '<p align="center">Contract deployment is in progress - please be patient. If nothing happens for a while check if there\'s any errors in the console (hit F12).<br> <strong>Transaction hash: </strong><br> <a href="https://etherscan.io/tx/' + transactionHash + '" target="_blank">' + transactionHash + '</a></p>'
				} else if (isRopsten) {
					statusText.innerHTML = '<p align="center">Contract deployment is in progress - please be patient. If nothing happens for a while check if there\'s any errors in the console (hit F12). <br> <strong>Transaction hash: </strong><br> <a href="https://ropsten.etherscan.io/tx/' + transactionHash + '" target="_blank">' + transactionHash + '</a></p>'
				} else if (isRinkeby) {
					statusText.innerHTML = '<p align="center">Contract deployment is in progress - please be patient. If nothing happens for a while check if there\'s any errors in the console (hit F12). <br> <strong> Transaction hash: </strong><br> <a href="https://rinkeby.etherscan.io/tx/' + transactionHash + '" target="_blank">' + transactionHash + '</a></p>'
				} else if (isGoerli) {
					statusText.innerHTML = '<p align="center">Contract deployment is in progress - please be patient. If nothing happens for a while check if there\'s any errors in the console (hit F12). <br> <strong> Transaction hash: </strong><br> <a href="https://goerli.etherscan.io/tx/' + transactionHash + '" target="_blank">' + transactionHash + '</a></p>'
				} else
					statusText.innerHTML = 'Contract deployment is in progress - please be patient. If nothing happens for a while check if there\'s any errors in the console (hit F12). Transaction hash: ' + transactionHash
			}).on('confirmation', function () {
				return;
			}).then(function (newContractInstance) {
				if (!newContractInstance.options.address) {
					console.log(newContractInstance);
					return;
				}
				console.log('Deployed Contract Address : ', newContractInstance.options.address);
				var newContractAddress = newContractInstance.options.address;
				if (isMainNetwork) {
					statusText.innerHTML = 'Transaction  mined! Contract address: <a href="https://etherscan.io/token/' + newContractAddress + '" target="_blank">' + newContractAddress + '</a>'
				} else if (isRopsten) {
					statusText.innerHTML = 'Transaction  mined! Contract address: <a href="https://ropsten.etherscan.io/token/' + newContractAddress + '" target="_blank">' + newContractAddress + '</a>'
				} else if (isRinkeby) {
					statusText.innerHTML = 'Transaction  mined! Contract address: <a href="https://rinkeby.etherscan.io/token/' + newContractAddress + '" target="_blank">' + newContractAddress + '</a>'
				} else if (isGoerli) {
					statusText.innerHTML = 'Transaction  mined! Contract address: <a href="https://goerli.etherscan.io/token/' + newContractAddress + '" target="_blank">' + newContractAddress + '</a>'
				} else
					statusText.innerHTML = 'Contract deployed at address <b>' + newContractAddress + '</b> - keep a record of this.'
			}).catch(function (error) {
				console.error(error);
				assetFormInput.prop("disabled", false);

			})

	}
});


function nthRoot(x, n) {
	if (x < 0 && n % 2 != 1) return NaN; // Not well defined
	return (x < 0 ? -1 : 1) * Math.pow(Math.abs(x), 1 / n);
}



$("#decimals").keypress(function (e) {
	//if the letter is not digit then display error and don't type anything
	if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
		//display error message
		$("#decimals-error-msg").html("Digits Only").show().fadeOut("slow");
		return false;
	}
});

$("#txFee").keypress(function (e) {
	//if the letter is not digit then display error and don't type anything
	if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
		//display error message
		$("#decimals-error-msg").html("Digits Only").show().fadeOut("slow");
		return false;
	}
});

$("#burnFee").keypress(function (e) {
	//if the letter is not digit then display error and don't type anything
	if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
		//display error message
		$("#decimals-error-msg").html("Digits Only").show().fadeOut("slow");
		return false;
	}
});

$("#charityFee").keypress(function (e) {
	//if the letter is not digit then display error and don't type anything
	if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
		//display error message
		$("#decimals-error-msg").html("Digits Only").show().fadeOut("slow");
		return false;
	}
});

$("#total-supply").keypress(function (e) {
	//if the letter is not digit then display error and don't type anything
	if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
		//display error message
		$("#total-supply-error-msg").html("Digits Only").show().fadeOut("slow");
		return false;
	} else {
		//TODO:show token total supply will be on bottom of total supply input
		// $("#total-supply").keyup(function (e) {
		//     if ($("#decimals").val() && $('#total-supply').val()) {
		//         console.log(Math.trunc($('#total-supply').val() / Math.pow(10, $("#decimals").val()))
		//     }
		// })
	}
});

